######################################################################
# Build and run local tests
######################################################################

# Streams
OBJS  = stream/_run.o \
	stream/collect.o \
	stream/debug.o \
	stream/findFirst.o \
	stream/findFirst_flatMap.o \
	stream/flatMap.o \
	stream/ofInt.o \
	stream/on.o

######################################################################
# Don't edit below this line
######################################################################
#OBJS        = runtest.o ${TESTS}
CCFLAGS     = -O2 @CCFLAGS@
CPPFLAGS    = -I.. @CPPFLAGS@

# -rdynamic allows the test binary to have its symbols resolved by dladdr
# see http://stackoverflow.com/a/37433934/6734016
LDFLAGS     = @LDFLAGS@ -rdynamic

BUILD_DIR   = ../build
DIR	    = $(BUILD_DIR)/test
LIBDIR      = $(BUILD_DIR)/package/usr/lib
TARGET_OBJS = $(patsubst %.o, $(DIR)/%.o, $(OBJS))
TEST_BIN    = $(DIR)/runtest
TEST_LIB    = tests
TEST_LIB_A  = $(DIR)/lib${TEST_LIB}.a
all:

clean:

$(DIR)/%.o: %.c
	@mkdir -p $(@D)
	$(CC) $(CPPFLAGS) $(CCFLAGS) -c $< -o $@

$(TEST_LIB_A): $(TARGET_OBJS)
	@mkdir -p $(@D)
	ar -rcs $@ $(TARGET_OBJS)

$(TEST_BIN): $(DIR)/runtest.o $(TEST_LIB_A)
	@mkdir -p $(@D)
	$(CC) -o $@ $< -L${DIR} -ltests -larea51 $(LDFLAGS) 
	$(CC) -o $@ $< $(TEST_LIB_A) -larea51 $(LDFLAGS) 

# CD is required here to ensure that any core files from a test segfaulting
# being generated within the source tree
test: $(TEST_BIN)
	cd $(BUILD_DIR);LD_LIBRARY_PATH=${LIBDIR} $(TEST_BIN)
